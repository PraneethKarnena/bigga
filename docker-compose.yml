version: '3'

volumes:
  mongo_data: {}
  traefik_acme: {}
  rabbitmq_data: {}
  postgres_data: {}

services:

  mongo:
    env_file: .env
    restart: always
    image: mongo:latest
    ports:
      - 27017
    volumes:
      - mongo_data:/data/db

  rabbitmq:
    env_file: .env
    restart: always
    image: rabbitmq:latest
    ports:
      - 5672
    volumes:
      - rabbitmq_data:/data

  postgres:
    env_file: .env
    restart: always
    image: postgres:latest
    ports:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  worker: &worker
    env_file: .env
    restart: always
    build: backend
    command: gunicorn autoapp:app -b :6000
    links:
      - mongo:mongo
      - rabbitmq:rabbitmq
      - postgres:postgres

  backend:
    <<: *worker
    command: gunicorn autoapp:app -b :${BACKEND_PORT}
    expose:
      - ${BACKEND_PORT}
    labels:
      - traefik.enable=true
      - traefik.backend.domain=${BACKEND_DOMAIN}
      - traefik.frontend.rule=Host:${BACKEND_DOMAIN}
      - traefik.http.middlewares.testHeader.Headers.AddVaryHeader=true
      - traefik.http.middlewares.testHeader.Headers.AccessControlMaxAge=100
      - traefik.http.middlewares.testHeader.Headers.AccessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH
      - traefik.http.middlewares.testHeader.Headers.AccessControlAllowOrigin=*.${BACKEND_DOMAIN},${BACKEND_DOMAIN}

  ngfrontend:
    env_file: .env
    restart: always
    build: ngfrontend
    command: PORT=${NGFRONTEND_PORT} npm run serve:ssr
    expose:
      - ${NGFRONTEND_PORT}
    labels:
      - traefik.enable=true
      - traefik.backend.domain=${NGFRONTEND_DOMAIN}
      - traefik.frontend.rule=Host:${NGFRONTEND_DOMAIN}

  traefik:
    env_file: .env
    build: traefik
    depends_on:
      - backend
      - ngfrontend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik_acme:/etc/traefik/acme/ # Defined in traefik/traefik.toml
    ports:
      - 0.0.0.0:80:80
      - 0.0.0.0:443:443
